#! /usr/bin/env python

from nutils import *


def main( nelems=20, stress=library.Hooke(lmbda=1,mu=1), degree=2 ):

  domain, coords = mesh.rectilinear( [(0,1,nelems+1)]*2 )
  dspace = domain.splinefunc( degree=degree ).vector( 2 )
  elasticity = function.outer( dspace.grad(coords), stress(dspace,coords) ).sum([2,3])
  matrix = domain.integrate( elasticity, coords=coords, ischeme='gauss2' )
  nfval = ( dspace * coords.normal() ).sum()

  cons = domain.boundary['left'].project( 0, coords=coords, onto=dspace, ischeme='gauss2' ) \
       | domain.boundary['right'].project( .5, coords=coords, onto=nfval, ischeme='gauss2' )
  lhs = matrix.solve( constrain=cons, tol=1e-10, symmetric=True )
  disp = dspace.dot( lhs )

  points, colors = domain.elem_eval( [ coords + disp, stress(disp,coords)[0,1] ], ischeme='bezier4', separate=True )
  with plot.PyPlot( 'solution' ) as plt:
    plt.mesh( points, colors, triangulate='bezier' )
    plt.xlim(0,1.5)


util.run( main )
