#! /usr/bin/env python

from nutils import *


@log.title
def makeplots( domain, geom, stress ):

  points, colors = domain.elem_eval( [ geom, stress[0,1] ], ischeme='bezier3', separate=True )
  with plot.PyPlot( 'stress', ndigits=0 ) as plt:
    plt.mesh( points, colors, triangulate='bezier' )
    plt.colorbar()
    plt.axis( 'equal' )
    plt.xlim( 0, 1.5 )


def main( nelems=8, stress=library.Hooke(lmbda=1,mu=1), degree=2, plots=True, solvetol=1e-10 ):

  verts = numpy.linspace( 0, 1, nelems+1 )
  domain, geom = mesh.rectilinear( [verts,verts] )
  dspace = domain.splinefunc( degree=degree ).vector( 2 )
  elasticity = function.outer( dspace.grad(geom), stress(dspace.symgrad(geom)) ).sum([2,3])
  matrix = domain.integrate( elasticity, geometry=geom, ischeme='gauss2' )
  nfval = ( dspace * geom.normal() ).sum()

  cons = domain.boundary['left'].project( 0, geometry=geom, onto=dspace, ischeme='gauss2' ) \
       | domain.boundary['right'].project( .5, geometry=geom, onto=nfval, ischeme='gauss2' )
  lhs = matrix.solve( constrain=cons, tol=solvetol, symmetric=True )
  disp = dspace.dot( lhs )

  if plots:
    makeplots( domain, geom+disp, stress(disp.symgrad(geom)) )

  return lhs, cons


def unittest():

  retvals = main( nelems=4, degree=1, plots=False, solvetol=0 )
  assert debug.checkdata( retvals, '''
    eNqlkEsKwzAMRK8Tg1z09ec4XXSb+y/r2FZbh0IhBYsZ6Q1YiGBTIAuwbXiDz0ci6REbJNWhoks/OZtw
    VxXrKpWWfnLJNpXqUMS1H9xwzH/pad1UtI0NOOdyaBtF99FhEaRDldk85D46LCnXHlKur9D00WHJKCMk
    8g4NHx22q5623O/75bp4mH++/FYBwhP0AIpZ''' )

  retvals = main( nelems=4, degree=2, plots=False, solvetol=0 )
  assert debug.checkdata( retvals, '''
    eNq1ksEOwyAIhl+nTXQRENDH2aHXvv9xFqRJ1+ywLEtqvr/wi0gLaakJeE3LUh7p7WmgfcucuBQ1UqcL
    Zzx80LFuedRrx/ugMl8Y8ekjoOIEZxG5MOLTV0lpEp0sV0bcfaO/8g3vE+Be7GaognZThlFZUj5FZHJY
    tUM7KFSrDUUVzHCKyOSwNgH0LVLsNAI3nCIyOayNxYqJkBGBxLeEiEwOaxPyxmozIvI8JURkcljHb3Gf
    yf7c/7p+/2r/7vDTWtP6AuDh0ok=''' )


util.run( main, unittest )
