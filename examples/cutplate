#! /usr/bin/env python

from nutils import *


@log.title
def makeplots( domain, geom, stress ):

  points, colors = domain.simplex.elem_eval( [ geom, stress[0,1] ], ischeme='bezier3', separate=True )
  with plot.PyPlot( 'stress', ndigits=0 ) as plt:
    plt.mesh( points, colors, triangulate='bezier' )
    plt.colorbar()
    plt.axis( 'equal' )
    plt.xlim( 0, 1.5 )


def main( nelems=8, maxrefine=2, stress=library.Hooke(lmbda=1,mu=1), plots=True ):

  verts = numpy.linspace( 0, 1, nelems+1 )
  wholedomain, geom = mesh.rectilinear( [verts,verts] )
  dspace = wholedomain.splinefunc( degree=2 ).vector( 2 )
  levelset = function.norm2( geom ) - .5
  domain = wholedomain.trim( levelset, maxrefine=maxrefine )

  support = domain.integrate( function.norm2( dspace ), geometry=geom, ischeme='gauss6' )
  cons = util.NanVec( len(support) )
  cons[ support==0 ] = 0
  cons |= wholedomain.boundary['left,right'].project( geom*[.5,0], geometry=geom, ischeme='gauss6', onto=dspace )
  cons |= wholedomain.boundary['right'].project( [.5,0], geometry=geom, ischeme='gauss6', onto=dspace )

  elasticity = function.outer( dspace.grad(geom), stress(dspace,geom) ).sum([2,3])
  matrix = domain.integrate( elasticity, geometry=geom, ischeme='gauss6' )
  lhs = matrix.solve( constrain=cons, tol=1e-5, symmetric=True )
  disp = dspace.dot( lhs )

  if plots:
    makeplots( domain, geom+disp, stress(disp,geom) )

  return lhs, cons


def unittest():

  retvals = main( nelems=4, maxrefine=2, plots=False )
  assert debug.checkdata( retvals, '''
    eNq1UUmKw0AM/I4D3aDS1urnzMHX/P8YSzJMchyGYExJVlVZC8ahA/YYx0Hj9wFIzuljC/s5L8ZWJDo2
    ndOGLZXEgEaiLuGs6/LiCW9NZLQOW26f9E0eqNC1dSSVi1oUYu9GePPWKoywW1++aqt9jNpHuNCI6C/4
    PvvENVUOPzlQ3XLoziknW3QgHqsC914IwquibJxaZtYiWCyUmTmjvizeFZj2Dh25uytHS6A3UQQdGK/6
    iRIV4yqUUiikFavbAnO0tO5lH3NdN35Pnz/Pr77/OcG3e/tcy+MFToy+qQ==''' )

  retvals = main( nelems=4, maxrefine=3, plots=False )
  assert debug.checkdata( retvals, '''
    eNq1kcuKwzAMRX8nBRv0fnzOLLLt/y8bSYFpl8NQgjnWzZVsybgOWaiPdRywfr90jXP7SgE99+VIzqIR
    0Ll1qQsUA7Vjceb6L25WZMooEgre+T4EGR+O32Ri4PaxaJ/DmDfRxuddTyLszqemOg5hYqamAsBf+N77
    xijR1qbQvjWFd5ebNKQ3bDmKWXJtMLTJnWJX4zWAMgBLF1OjUZyqt2uGgi0YYs9SEbs43vpmRu+NkmsX
    z2yBGboCQ9Bk+GQg3Wdw1tz1o6/rjd/D58/zq+s/T/Dtu32O5fEC/ta/Ag==''' )


util.run( main, unittest )
