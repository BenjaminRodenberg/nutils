#! /usr/bin/env python

from nutils import *


@log.title
def makeplots( domain, geom, stress ):

  points, colors = domain.simplex.elem_eval( [ geom, stress[0,1] ], ischeme='bezier3', separate=True )
  with plot.PyPlot( 'stress', ndigits=0 ) as plt:
    plt.mesh( points, colors, triangulate='bezier' )
    plt.colorbar()
    plt.axis( 'equal' )
    plt.xlim( 0, 1.5 )


def main( nelems=8, maxrefine=2, stress=library.Hooke(lmbda=1,mu=1), plots=True ):

  verts = numpy.linspace( 0, 1, nelems+1 )
  wholedomain, geom = mesh.rectilinear( [verts,verts] )
  dspace = wholedomain.splinefunc( degree=2 ).vector( 2 )
  levelset = function.norm2( geom ) - .5
  domain = wholedomain.trim( levelset, maxrefine=maxrefine )

  support = domain.integrate( function.norm2( dspace ), geometry=geom, ischeme='gauss6' )
  cons = util.NanVec( len(support) )
  cons[ support==0 ] = 0
  cons |= wholedomain.boundary['left,right'].project( geom*[.5,0], geometry=geom, ischeme='gauss6', onto=dspace )
  cons |= wholedomain.boundary['right'].project( [.5,0], geometry=geom, ischeme='gauss6', onto=dspace )

  elasticity = function.outer( dspace.grad(geom), stress(dspace,geom) ).sum([2,3])
  matrix = domain.integrate( elasticity, geometry=geom, ischeme='gauss6' )
  lhs = matrix.solve( constrain=cons, tol=1e-5, symmetric=True )
  disp = dspace.dot( lhs )

  if plots:
    makeplots( domain, geom+disp, stress(disp,geom) )

  return lhs, cons


def unittest():

  retvals = main( nelems=4, maxrefine=2, plots=False )
  assert debug.CmpData( retvals ) == '''
    eNrNk8tqw0AMRX8nobbQW5rP6SLb/P+yyowm3TcJ1GA4CPnqcWU9LhcErOf2hXj8EQkIRW4nyjFA2KmQ
    KjoUx0QHGviI8mEQyjYxgTR8okII88wtdFoKAjwkJnLlom1dcd2IYvszQm10pWhEHtZiaqmNNAZvJMf9
    Wbg3ZtqvbrejYPEsYUijsTpfCbZW8gK+7sVJkDSXJsfJD9ZeYOqQuewKWw5dLOAZy4/TwQfy5FLxzPaG
    bc4qJcKsLWKQgb7qGDhPqyseZRptr1VlpdcFCGNHiSW7ijLJbkSIdGtz9L2Ug9glHxnCjZiyO9UYC2t2
    5nwOVucXk1/f6vV4w29y/75/9P0P5/fpGd9h5fUHZ3kiAg=='''

  retvals = main( nelems=4, maxrefine=3, plots=False )
  assert debug.CmpData( retvals ) == '''
    eNrNk8ttw0AMRNuJEZng/1NODr66/2NoLdcFxDYQAQIeBuRQy1np8fWFgP3cvhGPP2JBWPjtitqoaNJI
    B0FJ+okOjIyNfBiEIp2YQDaqQojYWdvottoEuGIhAynx09dzI0rsNhIcdNWNKCRjppY5SFVbJbLabREb
    Mx2fvuSDFvjEdaAHCg/aWskL+HoWV4JEfGxKjitD2qyqMVjOZbdsKb5YwItysTfLqmkX4yVLY+Bp2ClU
    xC5GUV1zDJxjTKJDK5uslabcgbBqVCLlmdIFtT9EKHSxAYfu6VVug4K5VUyK7RE5fQTMKduv1o3hN2z1
    crzhN7n/3D/6/ofr9+kzviPKyy+i7yJu'''


util.run( main, unittest )
