#! /usr/bin/env python

from nutils import *


@log.title
def makeplots( domain, geom, stress ):

  points, colors = domain.simplex.elem_eval( [ geom, stress[0,1] ], ischeme='bezier3', separate=True )
  with plot.PyPlot( 'stress', ndigits=0 ) as plt:
    plt.mesh( points, colors, triangulate='bezier' )
    plt.colorbar()
    plt.axis( 'equal' )
    plt.xlim( 0, 1.5 )


def main( nelems=8, maxrefine=2, stress=library.Hooke(lmbda=1,mu=1), plots=True, solvetol=1e-5 ):

  verts = numpy.linspace( 0, 1, nelems+1 )
  wholedomain, geom = mesh.rectilinear( [verts,verts] )
  levelset = function.norm2( geom ) - .5
  domain, complement = wholedomain.trim( levelset, maxrefine=maxrefine )
  dspace = domain.splinefunc( degree=2 ).vector( 2 )

  support = domain.integrate( function.norm2( dspace ), geometry=geom, ischeme='gauss6' )
  cons = util.NanVec( len(support) )
  cons[ support==0 ] = 0
  cons |= domain.boundary['left,right'].project( geom*[.5,0], geometry=geom, ischeme='gauss6', onto=dspace )
  cons |= domain.boundary['right'].project( [.5,0], geometry=geom, ischeme='gauss6', onto=dspace )

  elasticity = function.outer( dspace.grad(geom), stress(dspace,geom) ).sum([2,3])
  matrix = domain.integrate( elasticity, geometry=geom, ischeme='gauss6' )
  lhs = matrix.solve( constrain=cons, tol=solvetol, symmetric=True )
  disp = dspace.dot( lhs )

  if plots:
    makeplots( domain, geom+disp, stress(disp,geom) )

  return lhs, cons


def unittest():

  retvals = main( nelems=4, maxrefine=2, plots=False, solvetol=0 )
  assert debug.checkdata( retvals, '''
    eNq1kU0OAjEIha8zJq3hn3IcF269/1IKs1I3xpjM5KOUR8srjkMG6mUcB1zHyzdRfN0njxDG+8zCYN80
    jMzrUOfYXChFcZa9L+62yRSwSSh06q0J3HUQReu+Alx1LLqKGNFE6zrvurV67Vj3EvWTUHphKioAfMMP
    FriS7q1Ji+tOSd+zTtI9XAZsQRXYGVC1SzsWJW0QYUtSETsx1Ygr4xRSTgqUo1aT5hr7lDTuPIQhugdZ
    ew1USuZuzuDSilWcSNQKDqke79Pls78nH7fHX//fH+XfN/xk1OUJfkjFhw==''' )

  retvals = main( nelems=4, maxrefine=3, plots=False, solvetol=0 )
  assert debug.checkdata( retvals, '''
    eNq1UTluAzEM/I4NSAHv4zkp3Pr/ZURyq9hFgMCAFqMdzoxECtdNFup93W7wtX6tjcr02LxSER77CJO1
    0Kj+damzFcYRFopPXTywkCmlkFDo8tsgyOiweTHpfAFunkVj/NA8I9rovHmJ8Mvf54j6hTB5TI0K4/8r
    vhmBh2SVNkV0JoVh9bpJQ3rDlj2FbZZaG8ySnnEIn1g77SeMAJyL2Go8jDP05JSj0SA7VJGiowQnmxk7
    eyt5KwSmcgrt5M4uxyRtJMqxpvRhr92dZ38ln9/Pj37/f5RP3/DdoO4/9HrFWA==''' )


util.run( main, unittest )
